/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IntegrationLazyImport = createFileRoute('/integration')()
const DocsLazyImport = createFileRoute('/docs')()
const ChangelogLazyImport = createFileRoute('/changelog')()
const BlogLazyImport = createFileRoute('/blog')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IntegrationLazyRoute = IntegrationLazyImport.update({
  path: '/integration',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/integration.lazy').then((d) => d.Route))

const DocsLazyRoute = DocsLazyImport.update({
  path: '/docs',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/docs.lazy').then((d) => d.Route))

const ChangelogLazyRoute = ChangelogLazyImport.update({
  path: '/changelog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/changelog.lazy').then((d) => d.Route))

const BlogLazyRoute = BlogLazyImport.update({
  path: '/blog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/blog.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/blog': {
      id: '/blog'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogLazyImport
      parentRoute: typeof rootRoute
    }
    '/changelog': {
      id: '/changelog'
      path: '/changelog'
      fullPath: '/changelog'
      preLoaderRoute: typeof ChangelogLazyImport
      parentRoute: typeof rootRoute
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsLazyImport
      parentRoute: typeof rootRoute
    }
    '/integration': {
      id: '/integration'
      path: '/integration'
      fullPath: '/integration'
      preLoaderRoute: typeof IntegrationLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  BlogLazyRoute,
  ChangelogLazyRoute,
  DocsLazyRoute,
  IntegrationLazyRoute,
})

/* prettier-ignore-end */
